// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerLibrary.Data;

#nullable disable

namespace ServerLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241202214748_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseLibrary.Entities.Anexos", b =>
                {
                    b.Property<int>("NroAnexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroAnexo"));

                    b.Property<string>("CodProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodTipoEgreso")
                        .HasColumnType("int");

                    b.Property<int>("Correl")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("DetalleDocumentoNroDetalleDoc")
                        .HasColumnType("int");

                    b.Property<decimal>("Excento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Glosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Ice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Mtoiva")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroAutorizacion")
                        .HasColumnType("int");

                    b.Property<int?>("NroDetalleDoc")
                        .HasColumnType("int");

                    b.Property<int>("NroFactura")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorCodProv")
                        .HasColumnType("int");

                    b.Property<decimal>("Sujeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TipoEgresoCodTipoEgreso")
                        .HasColumnType("int");

                    b.HasKey("NroAnexo");

                    b.HasIndex("DetalleDocumentoNroDetalleDoc");

                    b.HasIndex("ProveedorCodProv");

                    b.HasIndex("TipoEgresoCodTipoEgreso");

                    b.ToTable("Anexos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Banco", b =>
                {
                    b.Property<int>("CodBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodBanco"));

                    b.Property<int>("CodCuenta")
                        .HasColumnType("int");

                    b.Property<string>("NomBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanCuentaCodCuenta")
                        .HasColumnType("int");

                    b.HasKey("CodBanco");

                    b.HasIndex("PlanCuentaCodCuenta");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Cliente", b =>
                {
                    b.Property<int>("CodCli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCli"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientTypeCodTipoCli")
                        .HasColumnType("int");

                    b.Property<int>("CodTipoCli")
                        .HasColumnType("int");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEx")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacturarA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("LimiteCre")
                        .HasColumnType("real");

                    b.Property<string>("NomCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDoc")
                        .HasColumnType("int");

                    b.Property<int?>("PlanCuentaCodCuenta")
                        .HasColumnType("int");

                    b.Property<string>("TelCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodCli");

                    b.HasIndex("ClientTypeCodTipoCli");

                    b.HasIndex("PlanCuentaCodCuenta");

                    b.HasIndex("UserCodUsuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.DetalleDocumento", b =>
                {
                    b.Property<int>("NroDetalleDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroDetalleDoc"));

                    b.Property<int?>("CodCc")
                        .HasColumnType("int");

                    b.Property<int>("Correl")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentoNroDoc")
                        .HasColumnType("int");

                    b.Property<string>("Glosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Mtobd")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Mtobh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Mtodd")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Mtodh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("NroDoc")
                        .HasColumnType("int");

                    b.Property<string>("TcCostoCodCc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NroDetalleDoc");

                    b.HasIndex("DocumentoNroDoc");

                    b.HasIndex("TcCostoCodCc");

                    b.ToTable("DetalleDocumentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Documento", b =>
                {
                    b.Property<int>("NroDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NroDoc"));

                    b.Property<int?>("BancoCodBanco")
                        .HasColumnType("int");

                    b.Property<int?>("CodBanco")
                        .HasColumnType("int");

                    b.Property<int?>("CodProv")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDoc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCheque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorCodProv")
                        .HasColumnType("int");

                    b.HasKey("NroDoc");

                    b.HasIndex("BancoCodBanco");

                    b.HasIndex("ProveedorCodProv");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PlanCuenta", b =>
                {
                    b.Property<int>("CodCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCuenta"));

                    b.Property<int>("CodCuentaMayor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("NomCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanCuentaMayorCodCuentaMayor")
                        .HasColumnType("int");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCuenta");

                    b.HasIndex("PlanCuentaMayorCodCuentaMayor");

                    b.ToTable("PlanCuentas");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PlanCuentaMayor", b =>
                {
                    b.Property<int>("CodCuentaMayor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCuentaMayor"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCuentaMayor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCuentaMayor");

                    b.ToTable("PlanCuentaMayores");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Proveedor", b =>
                {
                    b.Property<int>("CodProv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProv"));

                    b.Property<int>("CodCuenta")
                        .HasColumnType("int");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEx")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirProv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailProv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LimiteCre")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NomProv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDoc")
                        .HasColumnType("int");

                    b.Property<int?>("PlanCuentaCodCuenta")
                        .HasColumnType("int");

                    b.Property<string>("TelProv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoDocCodTipoDoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodProv");

                    b.HasIndex("PlanCuentaCodCuenta");

                    b.HasIndex("TipoDocCodTipoDoc");

                    b.HasIndex("UsuarioCodUsuario");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TcCosto", b =>
                {
                    b.Property<string>("CodCc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomCc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomResp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCc");

                    b.ToTable("TcCostos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoCliente", b =>
                {
                    b.Property<int>("CodTipoCli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoCli"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NomTipoCli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodTipoCli");

                    b.ToTable("TipoClientes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoDoc", b =>
                {
                    b.Property<int>("CodTipoDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoDoc"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomTipoDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodTipoDoc");

                    b.ToTable("TipoDocs");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoEgreso", b =>
                {
                    b.Property<int>("CodTipoEgreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoEgreso"));

                    b.Property<int?>("CodCuenta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanCuentaCodCuenta")
                        .HasColumnType("int");

                    b.HasKey("CodTipoEgreso");

                    b.HasIndex("PlanCuentaCodCuenta");

                    b.ToTable("TipoEgresos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Usuario", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUsuario"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClienteTipoDoc", b =>
                {
                    b.Property<int>("ClientesCodCli")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocsCodTipoDoc")
                        .HasColumnType("int");

                    b.HasKey("ClientesCodCli", "TipoDocsCodTipoDoc");

                    b.HasIndex("TipoDocsCodTipoDoc");

                    b.ToTable("ClienteTipoDoc");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Anexos", b =>
                {
                    b.HasOne("BaseLibrary.Entities.DetalleDocumento", "DetalleDocumento")
                        .WithMany("Anexos")
                        .HasForeignKey("DetalleDocumentoNroDetalleDoc");

                    b.HasOne("BaseLibrary.Entities.Proveedor", "Proveedor")
                        .WithMany("Anexos")
                        .HasForeignKey("ProveedorCodProv");

                    b.HasOne("BaseLibrary.Entities.TipoEgreso", "TipoEgreso")
                        .WithMany("Anexos")
                        .HasForeignKey("TipoEgresoCodTipoEgreso");

                    b.Navigation("DetalleDocumento");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoEgreso");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Banco", b =>
                {
                    b.HasOne("BaseLibrary.Entities.PlanCuenta", "PlanCuenta")
                        .WithMany("Bancos")
                        .HasForeignKey("PlanCuentaCodCuenta");

                    b.Navigation("PlanCuenta");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Cliente", b =>
                {
                    b.HasOne("BaseLibrary.Entities.TipoCliente", "ClientType")
                        .WithMany("Clientes")
                        .HasForeignKey("ClientTypeCodTipoCli");

                    b.HasOne("BaseLibrary.Entities.PlanCuenta", null)
                        .WithMany("Clientes")
                        .HasForeignKey("PlanCuentaCodCuenta");

                    b.HasOne("BaseLibrary.Entities.Usuario", "User")
                        .WithMany("Clientes")
                        .HasForeignKey("UserCodUsuario");

                    b.Navigation("ClientType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BaseLibrary.Entities.DetalleDocumento", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Documento", "Documento")
                        .WithMany("DetalleDocumentos")
                        .HasForeignKey("DocumentoNroDoc");

                    b.HasOne("BaseLibrary.Entities.TcCosto", "TcCosto")
                        .WithMany("DetalleDocumentos")
                        .HasForeignKey("TcCostoCodCc");

                    b.Navigation("Documento");

                    b.Navigation("TcCosto");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Documento", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Banco", "Banco")
                        .WithMany("Documentos")
                        .HasForeignKey("BancoCodBanco");

                    b.HasOne("BaseLibrary.Entities.Proveedor", "Proveedor")
                        .WithMany("Documentos")
                        .HasForeignKey("ProveedorCodProv");

                    b.Navigation("Banco");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PlanCuenta", b =>
                {
                    b.HasOne("BaseLibrary.Entities.PlanCuentaMayor", "PlanCuentaMayor")
                        .WithMany("PlanCuentas")
                        .HasForeignKey("PlanCuentaMayorCodCuentaMayor");

                    b.Navigation("PlanCuentaMayor");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Proveedor", b =>
                {
                    b.HasOne("BaseLibrary.Entities.PlanCuenta", "PlanCuenta")
                        .WithMany("Proveedores")
                        .HasForeignKey("PlanCuentaCodCuenta");

                    b.HasOne("BaseLibrary.Entities.TipoDoc", null)
                        .WithMany("Proveedores")
                        .HasForeignKey("TipoDocCodTipoDoc");

                    b.HasOne("BaseLibrary.Entities.Usuario", "Usuario")
                        .WithMany("Proveedores")
                        .HasForeignKey("UsuarioCodUsuario");

                    b.Navigation("PlanCuenta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoEgreso", b =>
                {
                    b.HasOne("BaseLibrary.Entities.PlanCuenta", "PlanCuenta")
                        .WithMany()
                        .HasForeignKey("PlanCuentaCodCuenta");

                    b.Navigation("PlanCuenta");
                });

            modelBuilder.Entity("ClienteTipoDoc", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Cliente", null)
                        .WithMany()
                        .HasForeignKey("ClientesCodCli")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.TipoDoc", null)
                        .WithMany()
                        .HasForeignKey("TipoDocsCodTipoDoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseLibrary.Entities.Banco", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.DetalleDocumento", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Documento", b =>
                {
                    b.Navigation("DetalleDocumentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PlanCuenta", b =>
                {
                    b.Navigation("Bancos");

                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PlanCuentaMayor", b =>
                {
                    b.Navigation("PlanCuentas");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Proveedor", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TcCosto", b =>
                {
                    b.Navigation("DetalleDocumentos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoCliente", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoDoc", b =>
                {
                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("BaseLibrary.Entities.TipoEgreso", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Usuario", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });
#pragma warning restore 612, 618
        }
    }
}
